Problem ID: abc333_b
Problem Content:
A regular pentagon P is shown in the figure below.

Determine whether the length of the line segment connecting points S_1 and S_2 of P equals the length of the line segment connecting points T_1 and T_2.

Input

The input is given from Standard Input in the following format:
S_1S_2
T_1T_2

Output

If the length of the line segment connecting points S_1 and S_2 of P equals the length of the line segment connecting points T_1 and T_2, print Yes; otherwise, print No.

Constraints


- Each of S_1, S_2, T_1, and T_2 is one of the characters A, B, C, D, and E.
- S_1 \neq S_2
- T_1 \neq T_2

Sample Input 1

AC
EC

Sample Output 1

Yes

The length of the line segment connecting point A and point C of P equals the length of the line segment connecting point E and point C.

Sample Input 2

DA
EA

Sample Output 2

No

The length of the line segment connecting point D and point A of P does not equal the length of the line segment connecting point E and point A.

Sample Input 3

BD
BD

Sample Output 3

Yes

Qwen2 Analysis:
The problem described above falls under the 'Algorithm & Logic' category in terms of difficulty and programming skill requirements. This is because it involves understanding geometric concepts (in this case, distances between points forming a regular pentagon) which need to be translated into logical steps that can be followed by an algorithm.

### Difficulty Level:

- **Intermediate**: The problem requires the ability to interpret input data in accordance with specific constraints and apply them effectively. It may involve some reasoning about geometric properties (though these are quite basic).

### Required Programming Skills:

- **Basic Input/Output Operations**: Ability to read from standard input and write to standard output is essential.
- **Conditional Logic**: The use of 'if' statements for comparing outputs based on the given conditions (Yes or No).
  
### Complexity:

- **Linear**: Since it deals with a small set of inputs (characters A-E), the complexity here can be considered linear, as each potential input requires a simple comparison.

### Algorithmic Approach:

1. **Data Interpretation**: The first step involves interpreting the characters provided which represent points on a pentagon.
2. **Comparison**: The next step compares these points with another set of points provided in a similar manner. 
3. **Output Determination**: Based on the comparison, it decides whether to output 'Yes' or 'No'.
   
Given its simplicity and reliance on basic programming concepts without needing advanced data structures, libraries, or complex logic flows (like recursion, multithreading), this problem would likely be classified as an intermediate-level challenge suitable for beginners in algorithmic problem-solving and coding.

### Solution Outline:

1. **Input Reading**: Read the two sets of points.
2. **Comparison Logic**: Use string comparison or mapping to associate each character with a specific point on the pentagon (e.g., A = top vertex, B = leftmost side).
3. **Distance Checking**: Determine distances between pairs based on pentagon geometry. Since it's regular, opposite sides should be equal.
4. **Output Logic**: Based on whether distances match for both sets of points, output 'Yes' or 'No'.
