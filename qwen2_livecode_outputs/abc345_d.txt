Problem ID: abc345_d
Problem Content:
There is a grid of H rows and W columns, each cell having a side length of 1, and we have N tiles.
The i-th tile (1\leq i\leq N) is a rectangle of size A_i\times B_i.
Determine whether it is possible to place the tiles on the grid so that all of the following conditions are satisfied:

- Every cell is covered by exactly one tile.
- It is fine to have unused tiles.
- The tiles may be rotated or flipped when placed. However, each tile must be aligned with the edges of the cells without extending outside the grid.

Input

The input is given from Standard Input in the following format:
N H W
A_1 B_1
A_2 B_2
\ldots
A_N B_N

Output

If it is possible to place the tiles on the grid so that all of the conditions in the problem statement are satisfied, print Yes; otherwise, print No.

Constraints


- 1\leq N\leq 7
- 1 \leq H,W \leq 10
- 1\leq A_i,B_i\leq 10
- All input values are integers.

Sample Input 1

5 5 5
1 1
3 3
4 4
2 3
2 5

Sample Output 1

Yes

Placing the 2-nd, 4-th, and 5-th tiles as shown below covers every cell of the grid by exactly one tile.

Hence, print Yes.

Sample Input 2

1 1 2
2 3

Sample Output 2

No

It is impossible to place the tile without letting it extend outside the grid.
Hence, print No.

Sample Input 3

1 2 2
1 1

Sample Output 3

No

It is impossible to cover all cells with the tile.
Hence, print No.

Sample Input 4

5 3 3
1 1
2 2
2 2
2 2
2 2

Sample Output 4

No

Note that each cell must be covered by exactly one tile.

Qwen2 Analysis:
The problem presented involves a grid of H rows and W columns where we have N tiles to place onto this grid. Each tile is represented as an AxB rectangle and we need to determine if it's possible to cover the grid such that:

1. Every cell in the grid is covered by exactly one tile.
2. Tiles can be rotated or flipped when placed, but they must align with the edges of the cells without extending outside the grid.

The constraints are as follows:
- We have a limit on the number of tiles (N <= 7) and dimensions of the grid (H,W >=1, A_i,B_i <=10).
- The inputs consist of N, H, W, followed by descriptions of each tile's size (A_i x B_i).

To solve this problem:
1. We need to calculate the total area covered by tiles compared to the total area of the grid.
2. Since we have rotation flexibility, it's more efficient to always try placing the larger side of a tile horizontally first and then vertically if needed.
3. We iterate through possible configurations, attempting to place each tile on the grid ensuring no overlap or extending outside boundaries.

Given these aspects:
- **Difficulty**: Intermediate
- **Required Skills**:
   - Understanding grid-based problems 
   - Spatial reasoning for tile placement
   - Implementation of brute-force or dynamic programming approaches for tile configurations (though brute force is straightforward given constraints).
- **Complexity**: The worst-case time complexity would be \(O(N * H * W)\) assuming we attempt placing each tile in every possible position, but with the constraint on N and grid dimensions, this remains manageable.

Therefore, this problem tests your skills in:
1. Logical planning for space allocation
2. Implementation of brute-force (or optimized) methods to find a solution if one exists within given constraints.
3. Efficient grid manipulation concepts such as area calculation.

In essence, it assesses the ability to think spatially and programmatically to implement solutions for problems involving geometrical shapes and arrangements on grids, which is typical in intermediate-level algorithmic challenges focusing on spatial reasoning and computational geometry techniques.
