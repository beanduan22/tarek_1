Problem ID: abc306_b
Problem Content:
You are given a sequence A=(A_0,A_1,\dots,A_{63}) of length 64 consisting of 0 and 1.
Find A_0 2^0 + A_1 2^1 + \dots + A_{63} 2^{63}.

Input

The input is given from Standard Input in the following format:
A_0 A_1 \dots A_{63}

Output

Print the answer as an integer.

Constraints


- A_i is 0 or 1.

Sample Input 1

1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

Sample Output 1

13

A_0 2^0 + A_1 2^1 + \dots + A_{63} 2^{63} = 2^0 + 2^2 + 2^3 = 13.

Sample Input 2

1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 0 0 1 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 1 1 1 1 0 0 1 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 0

Sample Output 2

766067858140017173

Qwen2 Analysis:
The given problem appears to involve binary number representation and bitwise operations. The task requires converting a sequence of bits into their decimal equivalent by calculating the sum of each bit multiplied by 2 raised to its position index (starting from 0 for the rightmost bit). This involves processing an array of boolean values, performing arithmetic operations, and potentially using large integers due to the size and potential value range.

**Difficulty Level**: Intermediate

**Required Programming Skills**:
- **Array/Sequence Manipulation**: The problem requires iterating over a sequence (a list or array) containing binary digits.
- **Bitwise Operations**: Although not explicitly mentioned, understanding how each bit contributes to the overall decimal value can be viewed as a bitwise operation perspective, where each bit represents \(2^n\) for its position from right to left starting at 0.
- **Arithmetic**: Basic arithmetic operations are needed (multiplication and addition).
- **Handling Large Numbers**: Depending on the programming language, you might need to handle large integers that can exceed standard integer types.

**Complexity Analysis**:
The time complexity is \(O(n)\), where \(n\) is the length of the sequence, as each element in the sequence needs to be processed once. The space complexity depends on how the input and output are handled; typically, it would be \(O(1)\) if we ignore the output buffer.

**Category Prediction**: Based on these characteristics, this problem likely falls into the category of **"Bit Manipulation and Basic Arithmetic Operations"**, emphasizing efficient handling of binary data and arithmetic computations without requiring advanced algorithms or complex data structures.
