Problem ID: abc347_e
Problem Content:
There is an integer sequence A=(A_1,A_2,\ldots,A_N) of length N, where all elements are initially set to 0. Also, there is a set S, which is initially empty.
Perform the following Q queries in order. Find the value of each element in the sequence A after processing all Q queries. The i-th query is in the following format:

- An integer x_i is given. If the integer x_i is contained in S, remove x_i from S. Otherwise, insert x_i to S. Then, for each j=1,2,\ldots,N, add |S| to A_j if j\in S.

Here, |S| denotes the number of elements in the set S. For example, if S=\lbrace 3,4,7\rbrace, then |S|=3.

Input

The input is given from Standard Input in the following format:
N Q
x_1 x_2 \ldots x_Q

Output

Print the sequence A after processing all queries in the following format:
A_1 A_2 \ldots A_N

Constraints


- 1\leq N,Q\leq 2\times10^5
- 1\leq x_i\leq N
- All given numbers are integers.

Sample Input 1

3 4
1 3 3 2

Sample Output 1

6 2 2

In the first query, 1 is inserted to S, making S=\lbrace 1\rbrace. Then, |S|=1 is added to A_1. The sequence becomes A=(1,0,0).
In the second query, 3 is inserted to S, making S=\lbrace 1,3\rbrace. Then, |S|=2 is added to A_1 and A_3. The sequence becomes A=(3,0,2).
In the third query, 3 is removed from S, making S=\lbrace 1\rbrace. Then, |S|=1 is added to A_1. The sequence becomes A=(4,0,2).
In the fourth query, 2 is inserted to S, making S=\lbrace 1,2\rbrace. Then, |S|=2 is added to A_1 and A_2. The sequence becomes A=(6,2,2).
Eventually, the sequence becomes A=(6,2,2).

Sample Input 2

4 6
1 2 3 2 4 2

Sample Output 2

15 9 12 7

Qwen2 Analysis:
The given programming problem can be categorized as follows:

Category: **Intermediate to Advanced Problem Solving**

**Difficulty**: The problem involves understanding set operations, array manipulations, and conditional logic, making it suitable for intermediate programmers who are familiar with basic data structures like arrays or lists. It may require careful reasoning about updates and queries on a data structure that changes over time.

**Required Programming Skills**:
1. **Understanding of Set Operations**: The ability to efficiently add/remove elements from a set is crucial since the problem involves performing operations on a set (`S`) based on given integers.
2. **Array Manipulation**: Efficiently updating an array based on certain conditions (insertion/removal from `S` and adding values to specific indices in `A`) is required.
3. **Conditional Logic**: Proper implementation of conditional statements within the loop that processes each query.

**Complexity**:
- **Time Complexity**: The naive approach involves iterating through all elements for each operation, resulting in a time complexity of O(Q*N) where Q is the number of queries and N is the length of the sequence. Optimized solutions can achieve better complexities depending on techniques used.
- **Space Complexity**: Typically quite low, since we are only dealing with an array (`A`) and a set (`S`), both of sizes at most `N`.

This problem falls under the category of "Dynamic Programming" or "Data Structures & Algorithms", focusing specifically on handling operations over dynamic data structures like sets. The problem requires careful design to avoid unnecessary computations and ensure that all queries are processed efficiently, potentially involving optimizations in set operations and array updates.

To solve this problem effectively, one might consider using a hash set for efficient set operations (insertion/removal) and possibly an advanced data structure or algorithmic technique to optimize the process of adding values to specific indices in `A`, depending on constraints and further optimization goals.
