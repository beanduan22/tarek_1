Problem ID: abc314_c
Problem Content:
You are given a string S of length N consisting of lowercase English letters.
Each character of S is painted in one of the M colors: color 1, color 2, ..., color M; for each i = 1, 2, \ldots, N, the i-th character of S is painted in color C_i.
For each i = 1, 2, \ldots, M in this order, let us perform the following operation.

- Perform a right circular shift by 1 on the part of S painted in color i.
  That is, if the p_1-th, p_2-th, p_3-th, \ldots, p_k-th characters are painted in color i from left to right, then simultaneously replace the p_1-th, p_2-th, p_3-th, \ldots, p_k-th characters of S with the p_k-th, p_1-th, p_2-th, \ldots, p_{k-1}-th characters of S, respectively.

Print the final S after the above operations.
The constraints guarantee that at least one character of S is painted in each of the M colors.

Input

The input is given from Standard Input in the following format:
N M
S
C_1 C_2 \ldots C_N

Output

Print the answer.

Constraints


- 1 \leq M \leq N \leq 2 \times 10^5
- 1 \leq C_i \leq M
- N, M, and C_i are all integers.
- S is a string of length N consisting of lowercase English letters.
- For each integer 1 \leq i \leq M, there is an integer 1 \leq j \leq N such that C_j = i.

Sample Input 1

8 3
apzbqrcs
1 2 3 1 2 2 1 2

Sample Output 1

cszapqbr

Initially, S =  apzbqrcs.

- For i = 1, perform a right circular shift by 1 on the part of S formed by the 1-st, 4-th, 7-th characters, resulting in S =  cpzaqrbs.
- For i = 2, perform a right circular shift by 1 on the part of S formed by the 2-nd, 5-th, 6-th, 8-th characters, resulting in S =  cszapqbr.
- For i = 3, perform a right circular shift by 1 on the part of S formed by the 3-rd character, resulting in S =  cszapqbr (here, S is not changed).

Thus, you should print cszapqbr, the final S.

Sample Input 2

2 1
aa
1 1

Sample Output 2

aa

Qwen2 Analysis:
Based on the description of the problem:

- **Difficulty**: The problem involves string manipulation and cyclic permutations which can be challenging for beginners but is relatively straightforward to implement correctly. The constraints are also quite large (up to $2 \times 10^5$), suggesting that there might not be a direct brute force solution due to time complexity concerns.

- **Required Programming Skills**: It requires knowledge of handling strings, performing cyclic permutations, and dealing with arrays or lists in the programming language of choice. Efficient data structure usage could also play a role depending on how one implements their solution (e.g., using an array for shifts vs dynamic data structures).

- **Complexity**: The time complexity can vary significantly based on implementation choices:
   - A naive approach might involve iterating over each character and shifting it according to its color, leading to $O(NM)$ time complexity. This would be inefficient for large inputs due to the large number of operations.
   - An optimized solution could achieve better performance by maintaining indices or using array manipulation techniques that allow efficient shifts in place ($O(N)$ time complexity) while still managing the cyclic shift across all colors.

Therefore, based on these considerations:

- **Category**: This problem falls under the category of "Intermediate" programming challenges. It requires a solid understanding of algorithms and data structures to efficiently solve it within practical time limits. The solution should prioritize optimizing the number of operations required (e.g., by keeping track of indices or using cyclic array manipulation techniques).

It could also be considered part of the categories related to string manipulation, permutations, and algorithm optimization within programming challenges.
