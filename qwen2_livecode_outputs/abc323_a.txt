Problem ID: abc323_a
Problem Content:
You are given a string S of length 16 consisting of 0 and 1.
If the i-th character of S is 0 for every even number i from 2 through 16, print Yes; otherwise, print No.

Input

The input is given from Standard Input in the following format:
S

Output

If the i-th character of S is 0 for every even number i from 2 through 16, print Yes; otherwise, print No.

Constraints


- S is a string of length 16 consisting of 0 and 1.

Sample Input 1

1001000000001010

Sample Output 1

No

The 4-th character of S= 1001000000001010 is 1, so you should print No.

Sample Input 2

1010100000101000

Sample Output 2

Yes

Every even-positioned character in S= 1010100000101000 is 0, so you should print Yes.

Sample Input 3

1111111111111111

Sample Output 3

No

Every even-positioned character in S is 1.
Particularly, they are not all 0, so you should print No.

Qwen2 Analysis:
Based on the description provided:

- The problem involves basic string handling and conditional checks. You need to iterate through specific indices (even positions) of a given string containing only zeros and ones. 

- It doesn't require advanced data structures or algorithms, just basic loop control and condition evaluation.

- The constraints are moderate, with input lengths being fixed at 16 characters long and consisting solely of binary digits.

Considering these aspects:

**Category Prediction**: 
The problem falls under the category of **Beginner to Intermediate Difficulty**, requiring skills in basic programming constructs like loops, conditions, and string manipulation. It tests understanding of accessing specific elements in a sequence based on their index (even or odd), which is a fundamental concept used across many programming languages.

This problem primarily evaluates:

1. **Looping Constructs**: The ability to iterate through the input data efficiently using a loop.
2. **Conditional Logic**: Evaluating conditions based on indices being even or odd.
3. **String Handling**: Direct access to characters at specific positions within a string, which involves basic indexing operations.

Overall, this problem is suitable for learners who are familiar with these concepts and looking to practice applying them in a controlled environment, such as solving small programming challenges or practicing interview preparation questions.
