Problem ID: abc336_b
Problem Content:
For a positive integer X, let \text{ctz}(X) be the (maximal) number of consecutive zeros at the end of the binary notation of X.
If the binary notation of X ends with a 1, then \text{ctz}(X)=0.
You are given a positive integer N. Print \text{ctz}(N).

Input

The input is given from Standard Input in the following format:
N

Output

Print \text{ctz}(N).

Constraints


- 1\leq N\leq 10^9
- N is an integer.

Sample Input 1

2024

Sample Output 1

3

2024 is 11111101000 in binary, with three consecutive 0s from the end, so \text{ctz}(2024)=3.
Thus, print 3.

Sample Input 2

18

Sample Output 2

1

18 is 10010 in binary, so \text{ctz}(18)=1.
Note that we count the trailing zeros.

Sample Input 3

5

Sample Output 3

0

Qwen2 Analysis:
The given problem can be categorized as a:

**Easy-Medium Difficulty Level Problem**: It requires understanding of binary representations and manipulation, which are fundamental concepts in computer science. No advanced data structures or algorithms are required.

**Skill Set Required**: Basic knowledge of binary number systems, familiarity with bit operations (like bitwise AND with powers of two), and the ability to interpret input/output requirements clearly.

**Time Complexity**: Linear based on the number of bits in `N`. Since most programming languages represent numbers as fixed-size integers, this complexity would usually be considered constant time for practical cases, but could theoretically depend linearly on the bit length if we consider an arbitrary precision integer library implementation.

**Space Complexity**: Constant. The solution does not require additional space that grows with input size; only a few variables are used to store intermediate results.

To solve the problem efficiently:

1. Convert `N` into its binary representation.
2. Iterate over each bit from right-to-left, looking for the first '0' bit which indicates the start of consecutive zeros at the end of the number's binary form.
3. Count these consecutive zero bits until a '1' is encountered or the entire number has been traversed.

This problem does not involve recursion, nested loops with high complexity, or complex data structures, making it suitable for beginners learning about bit-level operations in programming and binary representations.
