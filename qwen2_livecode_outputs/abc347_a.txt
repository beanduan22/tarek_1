Problem ID: abc347_a
Problem Content:
You are given positive integers N and K, and a sequence of length N, A=(A_1,A_2,\ldots,A_N).
Extract all elements of A that are multiples of K, divide them by K, and print the quotients.

Input

The input is given from Standard Input in the following format:
N K
A_1 A_2 \ldots A_N

Output

Divide all elements of A that are multiples of K and print the quotients in ascending order with spaces in between.

Constraints


- 1\leq N,K\leq 100
- 1\leq A_1 < A_2 < \ldots < A_N \leq 100
- A has at least one multiple of K.
- All given numbers are integers.

Sample Input 1

5 2
2 5 6 7 10

Sample Output 1

1 3 5

The multiples of 2 among the elements in A are 2, 6, and 10. Divide them by 2 to get 1, 3, and 5, and print them in ascending order with spaces in between.

Sample Input 2

3 1
3 4 7

Sample Output 2

3 4 7

Sample Input 3

5 10
50 51 54 60 65

Sample Output 3

5 6

Qwen2 Analysis:
The problem described above can be categorized as an **Easy Level** algorithmic coding challenge focusing on basic arithmetic operations, array processing, and conditional logic. Here's why:

1. **Difficulty Level**: The constraints indicate that the maximum size of the input array `N` and the integer value `K` are limited to 100. This suggests a straightforward problem with no complex mathematical or computational requirements.

2. **Required Programming Skills**: To solve this problem, you primarily need skills in:
   - Reading data from stdin
   - Handling arrays or lists (extracting elements based on certain conditions)
   - Conditional logic for checking if an element is a multiple of `K`
   - Arithmetic operations such as modulo division (`%`) and integer division (`//`), which are fundamental concepts.
   - Basic output formatting skills.

3. **Complexity**: The time complexity here depends on the implementation but can be considered relatively low due to:
   - A straightforward loop iterating through each element of the array
   - Simple conditions based on arithmetic operations

In summary, this problem is an excellent starting point for beginners learning programming or basic algorithmic challenges as it covers essential concepts without overwhelming complexity. It requires minimal background knowledge and primarily tests the ability to implement simple logic correctly in code.
