Problem ID: abc336_a
Problem Content:
For a positive integer X, the Dragon String of level X is a string of length (X+3) formed by one L, X occurrences of o, one n, and one g arranged in this order.
You are given a positive integer N. Print the Dragon String of level N.
Note that uppercase and lowercase letters are distinguished.

Input

The input is given from Standard Input in the following format:
N

Output

Print the Dragon String of level N.

Constraints


- 1 \leq N \leq 2024
- N is an integer.

Sample Input 1

3

Sample Output 1

Looong

Arranging one L, three os, one n, and one g in this order yields Looong.

Sample Input 2

1

Sample Output 2

Long

Qwen2 Analysis:
Based on the description of the problem:

- **Difficulty Level**: The task is straightforward as it only involves performing a simple calculation (creating a specific string) based on an input integer \(N\). It does not require complex algorithms or advanced data structures.

- **Required Programming Skills**:
  - String manipulation: The solution will involve creating and printing strings.
  - Basic arithmetic operations: Adding numbers together, which is part of the formula to determine the length of the dragon string based on \(N\).
  
- **Complexity**: The time complexity would be \(O(1)\) since there are no loops or recursive calls that grow with the size of the input. The space complexity would also be \(O(1)\), as it only requires storing a fixed number of characters in memory.

Given these factors, this problem can be categorized as **Easy** in terms of difficulty and **Basic Implementation** when considering required skills (primarily string manipulation). It serves as a good introductory exercise for beginners learning programming languages that involve text handling.
