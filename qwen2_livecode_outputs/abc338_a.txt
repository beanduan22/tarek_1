Problem ID: abc338_a
Problem Content:
You are given a non-empty string S consisting of uppercase and lowercase English letters. Determine whether the following condition is satisfied:

- The first character of S is uppercase, and all other characters are lowercase.

Input

The input is given from Standard Input in the following format:
S

Output

If the condition is satisfied, print Yes; otherwise, print No.

Constraints


- 1 \leq |S| \leq 100 (|S| is the length of the string S.)
- Each character of S is an uppercase or lowercase English letter.

Sample Input 1

Capitalized

Sample Output 1

Yes

The first character C of Capitalized is uppercase, and all other characters apitalized are lowercase, so you should print Yes.

Sample Input 2

AtCoder

Sample Output 2

No

AtCoder contains an uppercase letter C that is not at the beginning, so you should print No.

Sample Input 3

yes

Sample Output 3

No

The first character y of yes is not uppercase, so you should print No.

Sample Input 4

A

Sample Output 4

Yes

Qwen2 Analysis:
Based on the description provided:

- The problem involves string manipulation, as it deals with character attributes (uppercase or lowercase) within a string. This skill is fundamental in programming, particularly for problems related to text processing.

- There's no complex algorithmic logic involved; we just need to check specific conditions about the characters of a given string based on their case sensitivity.

- The problem constraints are moderate: strings can contain up to 100 characters and consist solely of uppercase and lowercase English letters. This suggests that the solution will likely involve linear time complexity (O(n)) as it might require iterating through each character in the string once or twice.

Considering these factors, I would categorize this problem:

**Category:** **Beginner/Intermediate**

- **Required Skills**: String manipulation, basic understanding of loops and conditional statements.
  
**Problem Type:** This falls under 'String Processing' and possibly 'Basic Algorithms' categories. It's a straightforward example to test one's ability to handle character cases in strings.

**Complexity:** The problem has low complexity as it does not require advanced data structures or complex algorithmic techniques beyond basic programming constructs. 

Therefore, this problem would be suitable for beginners looking to practice string handling and conditional logic in their programming exercises.
