Problem ID: abc326_d
Problem Content:
You are given an integer N and strings R and C of length N consisting of A, B, and C. Solve the following problem.
There is a N \times N grid. All cells are initially empty.
You can write at most one character from A, B, and C in each cell. (You can also leave the cell empty.)
Determine if it is possible to satisfy all of the following conditions, and if it is possible, print one way to do so.

- Each row and each column contain exactly one A, one B, and one C.
- The leftmost character written in the i-th row matches the i-th character of R.
- The topmost character written in the i-th column matches the i-th character of C.

Input

The input is given from Standard Input in the following format:
N
R
C

Output

If there is no way to fill the grid to satisfy the conditions in the problem statement, print No in one line.
Otherwise, print one such way to fill the grid in the following format:
Yes
A_1
A_2
\vdots
A_N

The first line should contain Yes.
The i-th of the subsequent N lines should contain a string A_i of length N.

- If the j-th character of A_i is ., it indicates that the cell in the i-th row from the top and the j-th column from the left is empty.
- If the j-th character of A_i is A, it indicates that A is written in the cell in the i-th row from the top and the j-th column from the left.
- If the j-th character of A_i is B, it indicates that B is written in the cell in the i-th row from the top and the j-th column from the left.
- If the j-th character of A_i is C, it indicates that C is written in the cell in the i-th row from the top and the j-th column from the left.

If there are multiple correct ways to fill the grid, you may print any of them.

Constraints


- N is an integer between 3 and 5, inclusive.
- R and C are strings of length N consisting of A, B, and C.

Sample Input 1

5
ABCBC
ACAAB

Sample Output 1

Yes
AC..B
.BA.C
C.BA.
BA.C.
..CBA

The grid in the output example satisfies all the following conditions, so it will be treated as correct.

- Each row contains exactly one A, one B, and one C.
- Each column contains exactly one A, one B, and one C.
- The leftmost characters written in the rows are A, B, C, B, C from top to bottom.
- The topmost characters written in the columns are A, C, A, A, B from left to right.

Sample Input 2

3
AAA
BBB

Sample Output 2

No

For this input, there is no way to fill the grid to satisfy the conditions.

Qwen2 Analysis:
The programming problem presented above can be classified as a **Medium Difficulty** question requiring skills in:

1. **String Manipulation**: The use of strings is evident since we are dealing with row and column conditions specified by `R` and `C`.
2. **Logical Reasoning**: You need to reason about the constraints to ensure each row and column contains exactly one instance of 'A', 'B', and 'C'.
3. **Data Structures**: While simple, you may use a 2D array or list in languages like C++ or Python respectively for creating the grid representation.

**Problem Complexity**:

- **Time Complexity**: The problem requires linear scans over rows (`R`) and columns (`C`), resulting in a time complexity of O(N^2) where N is the number of rows (which equals the number of columns).
- **Space Complexity**: This depends on how you store the grid. If using an array, it would be O(N^2). However, this might vary if implemented with other data structures.

**Category Prediction**: 

Given its reliance on string manipulation and logical deduction based on conditions rather than complex algorithms or data structures, I would categorize this problem as **Algorithmic Problem Solving**. It tests skills like pattern recognition, condition fulfillment, and systematic reasoning about constraints without requiring advanced optimization techniques.

Overall, the problem aims to challenge one's ability to map a scenario described in text (the constraints) into an operational code snippet that produces a solution fitting those specifications.
