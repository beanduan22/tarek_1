Problem ID: abc306_b
Problem Content:
You are given a sequence A=(A_0,A_1,\dots,A_{63}) of length 64 consisting of 0 and 1.
Find A_0 2^0 + A_1 2^1 + \dots + A_{63} 2^{63}.

Input

The input is given from Standard Input in the following format:
A_0 A_1 \dots A_{63}

Output

Print the answer as an integer.

Constraints


- A_i is 0 or 1.

Sample Input 1

1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

Sample Output 1

13

A_0 2^0 + A_1 2^1 + \dots + A_{63} 2^{63} = 2^0 + 2^2 + 2^3 = 13.

Sample Input 2

1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 0 0 1 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 1 1 1 1 0 0 1 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 0

Sample Output 2

766067858140017173

Codestral Analysis:
 Based on the given problem:

- The problem is about converting a binary number (sequence of 0s and 1s) to its decimal equivalent.
- Difficulty level: Easy
- Required programming skills: Basic knowledge of loops, arrays, and bitwise operations.
- Complexity: Linear time complexity, O(n), as we need to traverse through the given sequence once.

Therefore, this problem can be categorized under "Basic Algorithms" and "Bit Manipulation".
