Problem ID: abc347_b
Problem Content:
You are given a string S consisting of lowercase English letters. How many different non-empty substrings does S have?
A substring is a contiguous subsequence. For example, xxx is a substring of yxxxy but not of xxyxx.

Input

The input is given from Standard Input in the following format:
S

Output

Print the answer.

Constraints


- S is a string of length between 1 and 100, inclusive, consisting of lowercase English letters.

Sample Input 1

yay

Sample Output 1

5

S has the following five different non-empty substrings:

- a
- y
- ay
- ya
- yay

Sample Input 2

aababc

Sample Output 2

17

Sample Input 3

abracadabra

Sample Output 3

54

Codestral Analysis:
 The given problem is a basic string manipulation problem that can be solved with simple logic. This type of problem falls under the category of beginner-level problems in programming contests and it does not require advanced algorithms or data structures. To solve this problem, we just need to calculate the number of possible substrings from the given input string based on its length. The formula for calculating the number of substrings is `n*(n+1)/2`, where 'n' is the length of the string. This approach allows us to find all non-empty substrings, including single characters and combinations thereof. Therefore, this problem can be categorized as a beginner-level problem in string manipulation with a time complexity of O(1).
