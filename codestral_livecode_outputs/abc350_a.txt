Problem ID: abc350_a
Problem Content:
You are given a string S of length 6. It is guaranteed that the first three characters of S are ABC and the last three characters are digits.
Determine if S is the abbreviation of a contest held and concluded on AtCoder before the start of this contest.
Here, a string T is "the abbreviation of a contest held and concluded on AtCoder before the start of this contest" if and only if it equals one of the following 348 strings:
ABC001, ABC002, \ldots, ABC314, ABC315, ABC317, ABC318, \ldots, ABC348, ABC349.
Note that ABC316 is not included.

Input

The input is given from Standard Input in the following format:
S

Output

If S is the abbreviation of a contest held and concluded on AtCoder before the start of this contest, print Yes; otherwise, print No.

Constraints


- S is a string of length 6 where the first three characters are ABC and the last three characters are digits.

Sample Input 1

ABC349

Sample Output 1

Yes

ABC349 is the abbreviation of a contest held and concluded on AtCoder last week.

Sample Input 2

ABC350

Sample Output 2

No

ABC350 is this contest, which has not concluded yet.

Sample Input 3

ABC316

Sample Output 3

No

ABC316 was not held on AtCoder.

Codestral Analysis:
 The problem is a simple string matching task. It's given a string of length 6, where the first three characters are always "ABC" and the last three are digits. The task is to determine if this string is one of the abbreviations for a contest that was held on AtCoder before this current contest. There are specific rules for which strings qualify as valid abbreviations.

Category: Easy

Difficulty: This problem can be considered easy because it only requires checking if the input string matches one of the specified patterns, which is a straightforward task in most programming languages.

Required Programming Skills: Basic understanding of string manipulation and conditional statements. No advanced data structures or algorithms are required to solve this problem.

Complexity: The time complexity for this problem is O(1), assuming that checking if two strings are equal takes constant time. This is because there's a fixed set of valid abbreviations, so the number of checks doesn't increase with input size. The space complexity is also O(1) since we only need to store the input string and a few variables.
