Problem ID: abc327_a
Problem Content:
You are given a string S of length N consisting of lowercase English letters.
If there are any adjacent occurrences of a and b in S, print Yes; otherwise, print No. (The order of a and b does not matter.)

Input

The input is given from Standard Input in the following format:
N
S

Output

If there are any adjacent occurrences of a and b in S, print Yes; otherwise, print No.

Constraints


- 2 \leq N \leq 100
- S is a string of length N consisting of lowercase English letters.

Sample Input 1

3
abc

Sample Output 1

Yes

The string abc has a as the first character and b as the second character, which are adjacent. Thus, print Yes.

Sample Input 2

2
ba

Sample Output 2

Yes

The string ba has a as the second character and b as the first character, which are adjacent. (Note that the order of a and b does not matter.)

Sample Input 3

7
atcoder

Sample Output 3

No

Codestral Analysis:
 This problem can be categorized as a basic string manipulation problem. The difficulty level is low to moderate. It requires understanding of how to iterate through strings in a programming language and compare adjacent characters. The time complexity of the solution will be O(N), where N is the length of the input string.

Here's the Python solution:

```python
# Read the input
n = int(input())
s = input()

# Check for adjacent occurrences of 'a' and 'b'
for i in range(n - 1):
    if s[i] == 'a' and s[i + 1] == 'b':
        print('Yes')
        break
    elif s[i] == 'b' and s[i + 1] == 'a':
        print('Yes')
        break
else:
    print('No')
```
In this solution, we first read the input string `s` of length `n`. We then iterate through the string checking each pair of adjacent characters. If we find a pair that is either 'a' and 'b' or 'b' and 'a', we print 'Yes' and break out of the loop. If no such pair is found after checking all pairs, we print 'No'.
