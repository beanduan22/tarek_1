Problem ID: abc302_b
Problem Content:
There is a grid with H horizontal rows and W vertical columns.  Each cell has a lowercase English letter written on it.
We denote by (i, j) the cell at the i-th row from the top and j-th column from the left.
The letters written on the grid are represented by H strings S_1,S_2,\ldots, S_H, each of length W.
The j-th letter of S_i represents the letter written on (i, j).
There is a unique set of
contiguous cells (going vertically, horizontally, or diagonally) in the grid
with s, n, u, k, and e written on them in this order.
Find the positions of such cells and print them in the format specified in the Output section.
A tuple of five cells (A_1,A_2,A_3,A_4,A_5) is said to form
a set of contiguous cells (going vertically, horizontally, or diagonally) with s, n, u, k, and e written on them in this order
if and only if all of the following conditions are satisfied.

- A_1,A_2,A_3,A_4 and A_5 have letters s, n, u, k, and e written on them, respectively.
- For all 1\leq i\leq 4, cells A_i and A_{i+1} share a corner or a side.
- The centers of A_1,A_2,A_3,A_4, and A_5 are on a common line at regular intervals.

Input

The input is given from Standard Input in the following format:
H W
S_1
S_2
\vdots
S_H

Output

Print five lines in the following format.  
Let (R_1,C_1), (R_2,C_2)\ldots,(R_5,C_5) be the cells in the sought set with s, n, u, k, and e written on them, respectively.
The i-th line should contain R_i and C_i in this order, separated by a space.
In other words, print them in the following format:
R_1 C_1
R_2 C_2
\vdots
R_5 C_5

See also Sample Inputs and Outputs below.

Constraints


- 5\leq H\leq 100
- 5\leq W\leq 100
- H and W are integers.
- S_i is a string of length W consisting of lowercase English letters.
- The given grid has a unique conforming set of cells.

Sample Input 1

6 6
vgxgpu
amkxks
zhkbpp
hykink
esnuke
zplvfj

Sample Output 1

5 2
5 3
5 4
5 5
5 6

Tuple (A_1,A_2,A_3,A_4,A_5)=((5,2),(5,3),(5,4),(5,5),(5,6)) satisfies the conditions.
Indeed, the letters written on them are s, n, u, k, and e;
for all 1\leq i\leq 4, cells A_i and A_{i+1} share a side;
and the centers of the cells are on a common line.

Sample Input 2

5 5
ezzzz
zkzzz
ezuzs
zzznz
zzzzs

Sample Output 2

5 5
4 4
3 3
2 2
1 1

Tuple (A_1,A_2,A_3,A_4,A_5)=((5,5),(4,4),(3,3),(2,2),(1,1)) satisfies the conditions.
However, for example, (A_1,A_2,A_3,A_4,A_5)=((3,5),(4,4),(3,3),(2,2),(3,1)) violates the third condition because the centers of the cells are not on a common line, although it satisfies the first and second conditions.

Sample Input 3

10 10
kseeusenuk
usesenesnn
kskekeeses
nesnusnkkn
snenuuenke
kukknkeuss
neunnennue
sknuessuku
nksneekknk
neeeuknenk

Sample Output 3

9 3
8 3
7 3
6 3
5 3

Codestral Analysis:
 This is a grid searching problem that can be solved using string searching techniques and basic pattern recognition in a two-dimensional array (matrix). To solve this problem, we need to locate the positions of letters 's', 'n', 'u', 'k', and 'e' in order and such that they form a valid sequence. This means that the cells containing these letters should be contiguous (either vertically, horizontally or diagonally) and their centers should lie on a common line at regular intervals.

    The difficulty level of this problem is moderately high as it requires an understanding of two-dimensional arrays and pattern recognition, which are both common topics in computer science curricula. Additionally, the problem involves searching for multiple patterns in sequential order, making the solution more complex. Overall, this problem can be considered a moderate to hard level problem for a programmer with intermediate skills in string searching techniques and two-dimensional arrays.

    The complexity of this problem is O(H * W), where H and W are the number of rows and columns in the grid. This is because we need to iterate through each cell in the grid once, checking if it matches the current letter in our pattern sequence. If the cell does match, we then check the surrounding cells for the next letters in the pattern sequence, which requires additional iterations. In the worst case scenario, this means that we may perform up to 25 (5^2) iterations for each cell in the grid.

    In summary, this problem is a moderately difficult grid searching problem that requires an understanding of two-dimensional arrays and pattern recognition. The complexity of the solution is O(H * W), where H and W are the number of rows and columns in the grid.
