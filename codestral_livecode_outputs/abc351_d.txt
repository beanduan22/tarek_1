Problem ID: abc351_d
Problem Content:
There is a grid of H rows and W columns. Some cells (possibly zero) contain magnets.
The state of the grid is represented by H strings S_1, S_2, \ldots, S_H of length W. If the j-th character of S_i is #, it indicates that there is a magnet in the cell at the i-th row from the top and j-th column from the left; if it is ., it indicates that the cell is empty.
Takahashi, wearing an iron armor, can move in the grid as follows:

- If any of the cells vertically or horizontally adjacent to the current cell contains a magnet, he cannot move at all.
- Otherwise, he can move to any one of the vertically or horizontally adjacent cells.
However, he cannot exit the grid.

For each cell without a magnet, define its degree of freedom as the number of cells he can reach by repeatedly moving from that cell. Find the maximum degree of freedom among all cells without magnets in the grid.
Here, in the definition of degree of freedom, "cells he can reach by repeatedly moving" mean cells that can be reached from the initial cell by some sequence of moves (possibly zero moves). It is not necessary that there is a sequence of moves that visits all such reachable cells starting from the initial cell. Specifically, each cell itself (without a magnet) is always included in the cells reachable from that cell.

Input

The input is given from Standard Input in the following format:
H W
S_1
S_2
\vdots
S_H

Output

Print the maximum degree of freedom among all cells without magnets.

Constraints


- 1 \leq H, W \leq 1000
- H and W are integers.
- S_i is a string of length W consisting of . and #.
- There is at least one cell without a magnet.

Sample Input 1

3 5
.#...
.....
.#..#

Sample Output 1

9

Let (i,j) denote the cell at the i-th row from the top and j-th column from the left. If Takahashi starts at (2,3), possible movements include:

- (2,3) \to (2,4) \to (1,4) \to (1,5) \to (2,5)
- (2,3) \to (2,4) \to (3,4)
- (2,3) \to (2,2)
- (2,3) \to (1,3)
- (2,3) \to (3,3)

Thus, including the cells he passes through, he can reach at least nine cells from (2,3).
Actually, no other cells can be reached, so the degree of freedom for (2,3) is 9.
This is the maximum degree of freedom among all cells without magnets, so print 9.

Sample Input 2

3 3
..#
#..
..#

Sample Output 2

1

For any cell without a magnet, there is a magnet in at least one of the adjacent cells.
Thus, he cannot move from any of these cells, so their degrees of freedom are 1.
Therefore, print 1.

Codestral Analysis:
 This is a single-source shortest path problem with some modifications in terms of considering reachable cells from each non-magnet cell as the degree of freedom for that cell. The problem can be solved using Depth First Search (DFS) or Breadth First Search (BFS). Here, the task is to find the maximum number of reachable cells from any non-magnet cell in a grid.

    This problem falls under the category of graph theory and search algorithms. The difficulty can be considered MEDIUM as it requires understanding of DFS or BFS algorithm to solve it optimally. Programming skills required are basic knowledge on handling arrays, loops, conditionals and string manipulations in a programming language like Python or Java.

    The complexity of this problem is O(N*M) where N is the number of rows and M is the number of columns as we have to visit each cell once. However, finding the maximum degree of freedom might involve additional processing which may increase the time complexity but it will not be more than O(N*M*K) where K is the maximum number of cells reachable from a single cell.

    In conclusion, this problem can be categorized as MEDIUM level graph theory and search algorithm problem requiring knowledge on basic programming concepts and DFS or BFS to solve optimally with a time complexity of O(N*M).
