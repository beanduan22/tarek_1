Problem ID: abc302_a
Problem Content:
There is an enemy with stamina A.  Every time you attack the enemy, its stamina reduces by B.
At least how many times do you need to attack the enemy to make its stamina 0 or less?

Input

The input is given from Standard Input in the following format:
A B

Output

Print the answer.

Constraints


- 1 \le A,B \le 10^{18}
- A and B are integers.

Sample Input 1

7 3

Sample Output 1

3

Attacking three times make the enemy's stamina -2.
Attacking only twice makes the stamina 1, so you need to attack it three times.

Sample Input 2

123456789123456789 987654321

Sample Output 2

124999999

Sample Input 3

999999999999999998 2

Sample Output 3

499999999999999999

Codestral Analysis:
 This is a mathematical problem that can be solved with basic arithmetic operations. The problem requires you to calculate how many times you need to attack an enemy until it has 0 or less stamina points, given its initial stamina (A) and the damage done by each attack (B). To solve this, we would divide A by B (using integer division since we're working with whole attacks) and then round up the result because even if you reach an exact multiple of B in stamina, it will take one more attack to finish off the enemy. This can be implemented directly using a programming language's built-in division operator and conditional statements to handle the rounding up.

    Difficulty: Easy
    Required Programming Skills: Basic arithmetic operations, use of division operator, if-else or ternary operators for rounding.
    Complexity: The problem has a constant time complexity (O(1)) since it only requires a few mathematical operations to solve.
