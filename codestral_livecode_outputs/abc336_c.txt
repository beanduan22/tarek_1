Problem ID: abc336_c
Problem Content:
A non-negative integer n is called a good integer when it satisfies the following condition:

- All digits in the decimal notation of n are even numbers (0, 2, 4, 6, and 8).

For example, 0, 68, and 2024 are good integers.
You are given an integer N. Find the N-th smallest good integer.

Input

The input is given from Standard Input in the following format:
N

Output

Print the N-th smallest good integer.

Constraints


- 1 \leq N \leq 10^{12}
- N is an integer.

Sample Input 1

8

Sample Output 1

24

The good integers in ascending order are 0, 2, 4, 6, 8, 20, 22, 24, 26, 28, \dots.
The eighth smallest is 24, which should be printed.

Sample Input 2

133

Sample Output 2

2024

Sample Input 3

31415926535

Sample Output 3

2006628868244228

Codestral Analysis:
 This is a computational mathematics problem that can be solved by understanding number theory and basic programming concepts. The difficulty level of this problem can be considered EASY to MEDIUM because it involves simple mathematical operations and does not require advanced data structures or algorithms. It tests the knowledge of handling numbers, digits, and iterations using loops, which are fundamental programming skills.

   The complexity of the solution depends on how we approach the problem. If we use a brute force approach by checking each number if it's a good integer until we find the N-th one, then the time complexity would be O(N). This is not efficient for large inputs as it may take a significant amount of time to iterate through all numbers up to N.

   To solve this problem more efficiently, we can utilize the pattern in the sequence of good integers. Noticing that good integers are formed by even digits only, we can observe that the first five good integers are single-digit numbers (0 to 8), then two-digit numbers follow from 10 to 98, and so on. We can calculate how many good integers each length contributes to the total count, and then determine the exact number by finding its corresponding digits. This approach reduces the time complexity significantly to O(D) where D is the number of digits in the N-th smallest good integer.

   In conclusion, this problem can be categorized as an EASY to MEDIUM level problem that tests basic programming skills and knowledge of numbers. The optimal solution has a lower time complexity compared to brute force approaches, making it efficient for large inputs.
