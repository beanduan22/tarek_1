Problem ID: abc355_d
Problem Content:
You are given N intervals of real numbers. The i-th (1 \leq i \leq N) interval is [l_i, r_i]. Find the number of pairs (i, j)\,(1 \leq i < j \leq N) such that the i-th and j-th intervals intersect.

Input

The input is given from Standard Input in the following format:
N
l_1 r_1
l_2 r_2
\vdots
l_N r_N

Output

Print the answer.

Constraints


- 2 \leq N \leq 5 \times 10^5
- 0 \leq l_i < r_i \leq 10^9
- All input values are integers.

Sample Input 1

3
1 5
7 8
3 7

Sample Output 1

2

The given intervals are [1,5], [7,8], [3,7]. Among these, the 1-st and 3-rd intervals intersect, as well as the 2-nd and 3-rd intervals, so the answer is 2.

Sample Input 2

3
3 4
2 5
1 6

Sample Output 2

3

Sample Input 3

2
1 2
3 4

Sample Output 3

0

Codestral Analysis:
 The problem can be categorized as a medium-level algorithmic problem that requires a good understanding of sorting algorithms and interval checking. Here's a brief analysis:

Difficulty Level: Medium

Required Programming Skills: Basic knowledge in array handling, sorting algorithms, binary search, and interval checking.

Complexity Analysis: The primary operation in this problem is sorting the intervals based on their starting points, which can be done in O(n log n) time using a comparison-based sorting algorithm like merge sort or quicksort. After that, for each interval, we are performing binary search to find the position of the right endpoint, which takes O(log n) time. Therefore, the overall complexity is O(n log n).

This problem can be solved using various programming languages including C++, Java, Python, and others. It's a common type of problem that appears in competitive programming contests such as Topcoder, Codechef, LeetCode, etc.
