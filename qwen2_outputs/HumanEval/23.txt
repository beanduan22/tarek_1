The provided problem is relatively simple and straightforward. It involves understanding basic concepts of strings in a programming context and utilizing built-in functionality to determine the length of a given string.

**Category:**

1. **Difficulty:** Easy
   - The problem does not require any complex logic or algorithms, just a fundamental knowledge of how to access properties of a string variable in Python.

2. **Required Programming Skills:**
   - Basic understanding of Python programming language.
   - Familiarity with accessing attributes and methods on strings in Python.

3. **Complexity:** Low
   - The task is limited to performing an operation (getting the length of a string) without any nested loops, recursion, or advanced data structures.

**Solution:**

```python
def strlen(string: str) -> int:
    return len(string)
```

This solution leverages Python's built-in `len()` function to determine the number of characters in a given string. This approach aligns with the goal of simplicity and efficiency while adhering to the constraints provided for the problem.

**Testing:**

To ensure correctness, you can use the following test cases:

```python
assert strlen('') == 0
assert strlen('abc') == 3
assert strlen('hello world') == 11
```

These tests cover empty strings, single-character strings, and multi-word sentences to validate that the function works as intended.